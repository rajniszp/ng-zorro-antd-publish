{"version":3,"names":["NzTreeDropIndicatorComponent","cdr","this","level","direction","style","prototype","ngOnChanges","_changes","renderIndicator","dropPosition","startPosition","endPosition","_a","offset","top","bottom","display","markForCheck","Component","args","selector","exportAs","template","changeDetection","ChangeDetectionStrategy","OnPush","preserveWhitespaces","host","ChangeDetectorRef","Input","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","call","__extends","TypeError","String","__","constructor","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","__read","o","n","m","Symbol","iterator","e","ar","next","done","push","value","error","__spread","concat","SuppressedError","NzTreeIndentComponent","nzTreeLevel","nzIsStart","nzIsEnd","nzSelectMode","listOfUnit","ngOnInit","changes","currentValue","NzTreeNodeSwitcherComponent","isLeaf","nzShowLine","isExpanded","NzTreeNodeTitleComponent","treeTemplate","selectMode","showIndicator","draggable","isDisabled","isMatched","searchValue","dragPosition","NzTreeNodeBuiltinComponent","nzTreeService","ngZone","renderer","elementRef","noAnimation","icon","title","isLoading","isSelected","isStart","isEnd","nzHideUnMatched","nzNoAnimation","nzShowIcon","nzTreeTemplate","nzSearchValue","nzDraggable","nzClick","EventEmitter","nzDblClick","nzContextMenu","nzCheckBoxChange","nzExpandChange","nzOnDragStart","nzOnDragEnter","nzOnDragOver","nzOnDragLeave","nzOnDrop","nzOnDragEnd","destroy$","Subject","dragPos","dragPosClass","canHide","onMousedown","event","preventDefault","clickExpand","nzAsyncData","nzTreeNode","children","setExpanded","setExpandedNodeList","eventNext","formatEvent","emit","clickSelect","isSelectable","setSelectedNodeList","dblClick","contextMenu","clickCheckBox","isDisableCheckbox","isChecked","isHalfChecked","setCheckedNodeList","clearDragClass","_this","forEach","removeClass","nativeElement","handleDragStart","dataTransfer","setData","setSelectedNode","handleDragEnter","getSelectedNode","run","handleDragOver","calcDropPosition","addClass","handleDragLeave","handleDragDrop","node","dropEvent","dragEndEvent","nzBeforeDrop","dragNode","pos","subscribe","canDrop","dropAndApply","handleDragEnd","handDragEvent","runOutsideAngular","fromEvent","pipe","takeUntil","complete","component","ngOnDestroy","NzTreeBaseService","NgZone","Renderer2","ElementRef","NzNoAnimationDirective","type","Host","Optional","Output","InputBoolean","NzTreeService","_super","NzTreeServiceFactory","higherOrderService","treeService","Injectable","NzTreeComponent","nzConfigService","directionality","_nzModuleName","nzBlockNode","nzExpandAll","nzCheckStrictly","nzShowExpand","nzCheckable","nzMultiple","nzVirtualItemSize","nzVirtualMaxBufferPx","nzVirtualMinBufferPx","nzVirtualHeight","nzData","nzExpandedKeys","nzSelectedKeys","nzCheckedKeys","nzFlattenNodes","beforeInit","dir","nzExpandedKeysChange","nzSelectedKeysChange","nzCheckedKeysChange","nzSearchValueChange","HIDDEN_STYLE","width","height","overflow","opacity","border","padding","margin","onChange","onTouched","writeValue","handleNzData","registerOnChange","fn","registerOnTouched","renderTreeProperties","useDefaultExpandedKeys","expandAll","isMultiple","isCheckStrictly","handleCheckedKeys","handleExpandedKeys","handleSelectedKeys","firstChange","handleSearchValue","nzSearchFunc","currentExpandedKeys","getExpandedNodeList","map","v","newExpandedKeys","handleFlattenNodes","rootNodes","trackByFlattenNode","_","isArray","data","coerceTreeNodes","initTree","expandKeys","flattenTreeData","keys","conductCheck","conductExpandedKeys","isMulti","conductSelectedKeys","searchFunc","dataList","origin","toLowerCase","includes","expandNodeAllParentBySearch","setMatchedNodeList","eventTriggerChanged","eventName","renderTree","conduct","selectedNode","flattenNodes$","change","detectChanges","ngAfterViewInit","NzTreeBase","animations","treeCollapseMotion","providers","provide","useFactory","deps","SkipSelf","NzTreeHigherOrderServiceToken","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","NzConfigService","Directionality","ContentChild","static","ViewChild","CdkVirtualScrollViewport","read","WithConfig","NgModule","imports","BidiModule","CommonModule","NzOutletModule","NzIconModule","NzNoAnimationModule","NzHighlightModule","ScrollingModule","declarations","NzTreeNodeBuiltinCheckboxComponent","exports"],"sources":["../../components/tree/tree-drop-indicator.component.ts","../../node_modules/tslib/tslib.es6.mjs","../../components/tree/tree-indent.component.ts","../../components/tree/tree-node-checkbox.component.ts","../../components/tree/tree-node-switcher.component.ts","../../components/tree/tree-node-title.component.ts","../../components/tree/tree-node.component.ts","../../components/tree/tree.service.ts","../../components/tree/tree.component.ts","../../components/tree/tree.module.ts"],"sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { NgStyleInterface } from 'ng-zorro-antd/core/types';\n\n@Component({\n  selector: 'nz-tree-drop-indicator',\n  exportAs: 'NzTreeDropIndicator',\n  template: ``,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  host: {\n    '[class.ant-tree-drop-indicator]': 'true',\n    '[style]': 'style'\n  }\n})\nexport class NzTreeDropIndicatorComponent implements OnChanges {\n  @Input() dropPosition?: number;\n  @Input() level: number = 1;\n  @Input() direction: string = 'ltr';\n  style: NgStyleInterface = {};\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  ngOnChanges(_changes: SimpleChanges): void {\n    this.renderIndicator(this.dropPosition!, this.direction);\n  }\n\n  renderIndicator(dropPosition: number, direction: string = 'ltr'): void {\n    const offset = 4;\n    const startPosition = direction === 'ltr' ? 'left' : 'right';\n    const endPosition = direction === 'ltr' ? 'right' : 'left';\n    const style: NgStyleInterface = {\n      [startPosition]: `${offset}px`,\n      [endPosition]: '0px'\n    };\n    switch (dropPosition) {\n      case -1:\n        style.top = `${-3}px`;\n        break;\n      case 1:\n        style.bottom = `${-3}px`;\n        break;\n      case 0:\n        // dropPosition === 0\n        style.bottom = `${-3}px`;\n        style[startPosition] = `${offset + 24}px`;\n        break;\n      default:\n        style.display = 'none';\n        break;\n    }\n    this.style = style;\n    this.cdr.markForCheck();\n  }\n}\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'nz-tree-indent',\n  exportAs: 'nzTreeIndent',\n  template: `\n    <span\n      [class.ant-tree-indent-unit]=\"!nzSelectMode\"\n      [class.ant-select-tree-indent-unit]=\"nzSelectMode\"\n      [class.ant-select-tree-indent-unit-start]=\"nzSelectMode && nzIsStart[i]\"\n      [class.ant-tree-indent-unit-start]=\"!nzSelectMode && nzIsStart[i]\"\n      [class.ant-select-tree-indent-unit-end]=\"nzSelectMode && nzIsEnd[i]\"\n      [class.ant-tree-indent-unit-end]=\"!nzSelectMode && nzIsEnd[i]\"\n      *ngFor=\"let _ of listOfUnit; let i = index\"\n    ></span>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  host: {\n    '[attr.aria-hidden]': 'true',\n    '[class.ant-tree-indent]': '!nzSelectMode',\n    '[class.ant-select-tree-indent]': 'nzSelectMode'\n  }\n})\nexport class NzTreeIndentComponent implements OnInit, OnChanges {\n  @Input() nzTreeLevel = 0;\n  @Input() nzIsStart: boolean[] = [];\n  @Input() nzIsEnd: boolean[] = [];\n  @Input() nzSelectMode = false;\n\n  listOfUnit: number[] = [];\n\n  ngOnInit(): void {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzTreeLevel } = changes;\n    if (nzTreeLevel) {\n      this.listOfUnit = [...new Array(nzTreeLevel.currentValue || 0)];\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'nz-tree-node-checkbox[builtin]',\n  template: `\n    <span [class.ant-tree-checkbox-inner]=\"!nzSelectMode\" [class.ant-select-tree-checkbox-inner]=\"nzSelectMode\"></span>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  host: {\n    '[class.ant-select-tree-checkbox]': `nzSelectMode`,\n    '[class.ant-select-tree-checkbox-checked]': `nzSelectMode && isChecked`,\n    '[class.ant-select-tree-checkbox-indeterminate]': `nzSelectMode && isHalfChecked`,\n    '[class.ant-select-tree-checkbox-disabled]': `nzSelectMode && (isDisabled || isDisableCheckbox)`,\n    '[class.ant-tree-checkbox]': `!nzSelectMode`,\n    '[class.ant-tree-checkbox-checked]': `!nzSelectMode && isChecked`,\n    '[class.ant-tree-checkbox-indeterminate]': `!nzSelectMode && isHalfChecked`,\n    '[class.ant-tree-checkbox-disabled]': `!nzSelectMode && (isDisabled || isDisableCheckbox)`\n  }\n})\nexport class NzTreeNodeBuiltinCheckboxComponent {\n  @Input() nzSelectMode = false;\n  @Input() isChecked?: boolean;\n  @Input() isHalfChecked?: boolean;\n  @Input() isDisabled?: boolean;\n  @Input() isDisableCheckbox?: boolean;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, TemplateRef } from '@angular/core';\nimport { NzTreeNode, NzTreeNodeOptions } from 'ng-zorro-antd/core/tree';\n\n@Component({\n  selector: 'nz-tree-node-switcher',\n  template: `\n    <ng-container *ngIf=\"isShowSwitchIcon\">\n      <ng-container *ngIf=\"!isLoading; else loadingTemplate\">\n        <ng-container *nzStringTemplateOutlet=\"nzExpandedIcon; context: { $implicit: context, origin: context.origin }\">\n          <i\n            nz-icon\n            nzType=\"caret-down\"\n            [class.ant-select-tree-switcher-icon]=\"nzSelectMode\"\n            [class.ant-tree-switcher-icon]=\"!nzSelectMode\"\n          ></i>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n    <ng-container *ngIf=\"nzShowLine\">\n      <ng-container *ngIf=\"!isLoading; else loadingTemplate\">\n        <ng-container *nzStringTemplateOutlet=\"nzExpandedIcon; context: { $implicit: context, origin: context.origin }\">\n          <i\n            *ngIf=\"isShowLineIcon\"\n            nz-icon\n            [nzType]=\"isSwitcherOpen ? 'minus-square' : 'plus-square'\"\n            class=\"ant-tree-switcher-line-icon\"\n          ></i>\n          <i *ngIf=\"!isShowLineIcon\" nz-icon nzType=\"file\" class=\"ant-tree-switcher-line-icon\"></i>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n    <ng-template #loadingTemplate>\n      <i nz-icon nzType=\"loading\" [nzSpin]=\"true\" class=\"ant-tree-switcher-loading-icon\"></i>\n    </ng-template>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  host: {\n    '[class.ant-select-tree-switcher]': 'nzSelectMode',\n    '[class.ant-select-tree-switcher-noop]': 'nzSelectMode && isLeaf',\n    '[class.ant-select-tree-switcher_open]': 'nzSelectMode && isSwitcherOpen',\n    '[class.ant-select-tree-switcher_close]': 'nzSelectMode && isSwitcherClose',\n    '[class.ant-tree-switcher]': '!nzSelectMode',\n    '[class.ant-tree-switcher-noop]': '!nzSelectMode && isLeaf',\n    '[class.ant-tree-switcher_open]': '!nzSelectMode && isSwitcherOpen',\n    '[class.ant-tree-switcher_close]': '!nzSelectMode && isSwitcherClose'\n  }\n})\nexport class NzTreeNodeSwitcherComponent {\n  @Input() nzShowExpand?: boolean;\n  @Input() nzShowLine?: boolean;\n  @Input() nzExpandedIcon?: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }>;\n  @Input() nzSelectMode = false;\n  @Input() context!: NzTreeNode;\n  @Input() isLeaf?: boolean;\n  @Input() isLoading?: boolean;\n  @Input() isExpanded?: boolean;\n\n  get isShowLineIcon(): boolean {\n    return !this.isLeaf && !!this.nzShowLine;\n  }\n\n  get isShowSwitchIcon(): boolean {\n    return !this.isLeaf && !this.nzShowLine;\n  }\n\n  get isSwitcherOpen(): boolean {\n    return !!this.isExpanded && !this.isLeaf;\n  }\n\n  get isSwitcherClose(): boolean {\n    return !this.isExpanded && !this.isLeaf;\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, SimpleChanges, TemplateRef } from '@angular/core';\nimport { NzTreeNode, NzTreeNodeOptions } from 'ng-zorro-antd/core/tree';\n\n@Component({\n  selector: 'nz-tree-node-title',\n  template: `\n    <ng-template [ngTemplateOutlet]=\"treeTemplate\" [ngTemplateOutletContext]=\"{ $implicit: context, origin: context.origin }\"></ng-template>\n    <ng-container *ngIf=\"!treeTemplate\">\n      <span\n        *ngIf=\"icon && showIcon\"\n        [class.ant-tree-icon__open]=\"isSwitcherOpen\"\n        [class.ant-tree-icon__close]=\"isSwitcherClose\"\n        [class.ant-tree-icon_loading]=\"isLoading\"\n        [class.ant-select-tree-iconEle]=\"selectMode\"\n        [class.ant-tree-iconEle]=\"!selectMode\"\n      >\n        <span\n          [class.ant-select-tree-iconEle]=\"selectMode\"\n          [class.ant-select-tree-icon__customize]=\"selectMode\"\n          [class.ant-tree-iconEle]=\"!selectMode\"\n          [class.ant-tree-icon__customize]=\"!selectMode\"\n        >\n          <i nz-icon *ngIf=\"icon\" [nzType]=\"icon\"></i>\n        </span>\n      </span>\n      <span class=\"ant-tree-title\" [innerHTML]=\"title | nzHighlight: matchedValue:'i':'font-highlight'\"></span>\n      <nz-tree-drop-indicator *ngIf=\"showIndicator\" [dropPosition]=\"dragPosition\" [level]=\"context.level\"></nz-tree-drop-indicator>\n    </ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  host: {\n    '[attr.title]': 'title',\n    '[attr.draggable]': 'canDraggable',\n    '[attr.aria-grabbed]': 'canDraggable',\n    '[class.draggable]': 'canDraggable',\n    '[class.ant-select-tree-node-content-wrapper]': `selectMode`,\n    '[class.ant-select-tree-node-content-wrapper-open]': `selectMode && isSwitcherOpen`,\n    '[class.ant-select-tree-node-content-wrapper-close]': `selectMode && isSwitcherClose`,\n    '[class.ant-select-tree-node-selected]': `selectMode && isSelected`,\n    '[class.ant-tree-node-content-wrapper]': `!selectMode`,\n    '[class.ant-tree-node-content-wrapper-open]': `!selectMode && isSwitcherOpen`,\n    '[class.ant-tree-node-content-wrapper-close]': `!selectMode && isSwitcherClose`,\n    '[class.ant-tree-node-selected]': `!selectMode && isSelected`\n  }\n})\nexport class NzTreeNodeTitleComponent implements OnChanges {\n  @Input() searchValue!: string;\n  @Input() treeTemplate: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }> | null = null;\n  @Input() draggable!: boolean;\n  @Input() showIcon!: boolean;\n  @Input() selectMode = false;\n  @Input() context!: NzTreeNode;\n  @Input() icon!: string;\n  @Input() title!: string;\n  @Input() isLoading!: boolean;\n  @Input() isSelected!: boolean;\n  @Input() isDisabled!: boolean;\n  @Input() isMatched!: boolean;\n  @Input() isExpanded!: boolean;\n  @Input() isLeaf!: boolean;\n  // Drag indicator\n  @Input() showIndicator = true;\n  @Input() dragPosition?: number;\n\n  get canDraggable(): boolean | null {\n    return this.draggable && !this.isDisabled ? true : null;\n  }\n\n  get matchedValue(): string {\n    return this.isMatched ? this.searchValue : '';\n  }\n\n  get isSwitcherOpen(): boolean {\n    return this.isExpanded && !this.isLeaf;\n  }\n\n  get isSwitcherClose(): boolean {\n    return !this.isExpanded && !this.isLeaf;\n  }\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { showIndicator, dragPosition } = changes;\n    if (showIndicator || dragPosition) {\n      this.cdr.markForCheck();\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Host,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  Renderer2,\n  SimpleChange,\n  TemplateRef\n} from '@angular/core';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\n\nimport { NzFormatBeforeDropEvent, NzFormatEmitEvent, NzTreeBaseService, NzTreeNode, NzTreeNodeOptions } from 'ng-zorro-antd/core/tree';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { fromEvent, Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'nz-tree-node[builtin]',\n  exportAs: 'nzTreeBuiltinNode',\n  template: `\n    <nz-tree-indent [nzTreeLevel]=\"nzTreeNode.level\" [nzSelectMode]=\"nzSelectMode\" [nzIsStart]=\"isStart\" [nzIsEnd]=\"isEnd\"></nz-tree-indent>\n    <nz-tree-node-switcher\n      *ngIf=\"nzShowExpand\"\n      [nzShowExpand]=\"nzShowExpand\"\n      [nzShowLine]=\"nzShowLine\"\n      [nzExpandedIcon]=\"nzExpandedIcon\"\n      [nzSelectMode]=\"nzSelectMode\"\n      [context]=\"nzTreeNode\"\n      [isLeaf]=\"isLeaf\"\n      [isExpanded]=\"isExpanded\"\n      [isLoading]=\"isLoading\"\n      (click)=\"clickExpand($event)\"\n    ></nz-tree-node-switcher>\n    <nz-tree-node-checkbox\n      builtin\n      *ngIf=\"nzCheckable\"\n      (click)=\"clickCheckBox($event)\"\n      [nzSelectMode]=\"nzSelectMode\"\n      [isChecked]=\"isChecked\"\n      [isHalfChecked]=\"isHalfChecked\"\n      [isDisabled]=\"isDisabled\"\n      [isDisableCheckbox]=\"isDisableCheckbox\"\n    ></nz-tree-node-checkbox>\n    <nz-tree-node-title\n      [icon]=\"icon\"\n      [title]=\"title\"\n      [isLoading]=\"isLoading\"\n      [isSelected]=\"isSelected\"\n      [isDisabled]=\"isDisabled\"\n      [isMatched]=\"isMatched\"\n      [isExpanded]=\"isExpanded\"\n      [isLeaf]=\"isLeaf\"\n      [searchValue]=\"nzSearchValue\"\n      [treeTemplate]=\"nzTreeTemplate\"\n      [draggable]=\"nzDraggable\"\n      [showIcon]=\"nzShowIcon\"\n      [selectMode]=\"nzSelectMode\"\n      [context]=\"nzTreeNode\"\n      [showIndicator]=\"showIndicator\"\n      [dragPosition]=\"dragPos\"\n      (dblclick)=\"dblClick($event)\"\n      (click)=\"clickSelect($event)\"\n      (contextmenu)=\"contextMenu($event)\"\n    ></nz-tree-node-title>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  host: {\n    '[class.ant-select-tree-treenode]': `nzSelectMode`,\n    '[class.ant-select-tree-treenode-disabled]': `nzSelectMode && isDisabled`,\n    '[class.ant-select-tree-treenode-switcher-open]': `nzSelectMode && isSwitcherOpen`,\n    '[class.ant-select-tree-treenode-switcher-close]': `nzSelectMode && isSwitcherClose`,\n    '[class.ant-select-tree-treenode-checkbox-checked]': `nzSelectMode && isChecked`,\n    '[class.ant-select-tree-treenode-checkbox-indeterminate]': `nzSelectMode && isHalfChecked`,\n    '[class.ant-select-tree-treenode-selected]': `nzSelectMode && isSelected`,\n    '[class.ant-select-tree-treenode-loading]': `nzSelectMode && isLoading`,\n    '[class.ant-tree-treenode]': `!nzSelectMode`,\n    '[class.ant-tree-treenode-disabled]': `!nzSelectMode && isDisabled`,\n    '[class.ant-tree-treenode-switcher-open]': `!nzSelectMode && isSwitcherOpen`,\n    '[class.ant-tree-treenode-switcher-close]': `!nzSelectMode && isSwitcherClose`,\n    '[class.ant-tree-treenode-checkbox-checked]': `!nzSelectMode && isChecked`,\n    '[class.ant-tree-treenode-checkbox-indeterminate]': `!nzSelectMode && isHalfChecked`,\n    '[class.ant-tree-treenode-selected]': `!nzSelectMode && isSelected`,\n    '[class.ant-tree-treenode-loading]': `!nzSelectMode && isLoading`,\n    '[style.display]': 'displayStyle',\n    '(mousedown)': 'onMousedown($event)'\n  }\n})\nexport class NzTreeNodeBuiltinComponent implements OnInit, OnChanges, OnDestroy {\n  static ngAcceptInputType_nzShowLine: BooleanInput;\n  static ngAcceptInputType_nzShowExpand: BooleanInput;\n  static ngAcceptInputType_nzCheckable: BooleanInput;\n  static ngAcceptInputType_nzAsyncData: BooleanInput;\n  static ngAcceptInputType_nzHideUnMatched: BooleanInput;\n  static ngAcceptInputType_nzNoAnimation: BooleanInput;\n  static ngAcceptInputType_nzSelectMode: BooleanInput;\n  static ngAcceptInputType_nzShowIcon: BooleanInput;\n\n  /**\n   * for global property\n   */\n  @Input() icon: string = '';\n  @Input() title: string = '';\n  @Input() isLoading: boolean = false;\n  @Input() isSelected: boolean = false;\n  @Input() isDisabled: boolean = false;\n  @Input() isMatched: boolean = false;\n  @Input() isExpanded!: boolean;\n  @Input() isLeaf!: boolean;\n  @Input() isChecked?: boolean;\n  @Input() isHalfChecked?: boolean;\n  @Input() isDisableCheckbox?: boolean;\n  @Input() isSelectable?: boolean;\n  @Input() canHide?: boolean;\n  @Input() isStart: boolean[] = [];\n  @Input() isEnd: boolean[] = [];\n  @Input() nzTreeNode!: NzTreeNode;\n  @Input() @InputBoolean() nzShowLine?: boolean;\n  @Input() @InputBoolean() nzShowExpand?: boolean;\n  @Input() @InputBoolean() nzCheckable?: boolean;\n  @Input() @InputBoolean() nzAsyncData?: boolean;\n  @Input() @InputBoolean() nzHideUnMatched = false;\n  @Input() @InputBoolean() nzNoAnimation = false;\n  @Input() @InputBoolean() nzSelectMode = false;\n  @Input() @InputBoolean() nzShowIcon = false;\n  @Input() nzExpandedIcon?: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }>;\n  @Input() nzTreeTemplate: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }> | null = null;\n  @Input() nzBeforeDrop?: (confirm: NzFormatBeforeDropEvent) => Observable<boolean>;\n  @Input() nzSearchValue = '';\n  @Input() nzDraggable: boolean = false;\n  @Output() readonly nzClick = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzDblClick = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzContextMenu = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzCheckBoxChange = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzExpandChange = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragStart = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragEnter = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragOver = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragLeave = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDrop = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragEnd = new EventEmitter<NzFormatEmitEvent>();\n\n  /**\n   * drag var\n   */\n  destroy$ = new Subject();\n  dragPos = 2;\n  dragPosClass: { [key: string]: string } = {\n    '0': 'drag-over',\n    '1': 'drag-over-gap-bottom',\n    '-1': 'drag-over-gap-top'\n  };\n  showIndicator = false;\n  /**\n   * default set\n   */\n  get displayStyle(): string {\n    // to hide unmatched nodes\n    return this.nzSearchValue && this.nzHideUnMatched && !this.isMatched && !this.isExpanded && this.canHide ? 'none' : '';\n  }\n\n  get isSwitcherOpen(): boolean {\n    return this.isExpanded && !this.isLeaf;\n  }\n\n  get isSwitcherClose(): boolean {\n    return !this.isExpanded && !this.isLeaf;\n  }\n\n  onMousedown(event: MouseEvent): void {\n    if (this.nzSelectMode) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * collapse node\n   * @param event\n   */\n  clickExpand(event: MouseEvent): void {\n    event.preventDefault();\n    if (!this.isLoading && !this.isLeaf) {\n      // set async state\n      if (this.nzAsyncData && this.nzTreeNode.children.length === 0 && !this.isExpanded) {\n        this.nzTreeNode.isLoading = true;\n      }\n      this.nzTreeNode.setExpanded(!this.isExpanded);\n    }\n    this.nzTreeService.setExpandedNodeList(this.nzTreeNode);\n    const eventNext = this.nzTreeService.formatEvent('expand', this.nzTreeNode, event);\n    this.nzExpandChange.emit(eventNext);\n  }\n\n  clickSelect(event: MouseEvent): void {\n    event.preventDefault();\n    if (this.isSelectable && !this.isDisabled) {\n      this.nzTreeNode.isSelected = !this.nzTreeNode.isSelected;\n    }\n    this.nzTreeService.setSelectedNodeList(this.nzTreeNode);\n    const eventNext = this.nzTreeService.formatEvent('click', this.nzTreeNode, event);\n    this.nzClick.emit(eventNext);\n  }\n\n  dblClick(event: MouseEvent): void {\n    event.preventDefault();\n    const eventNext = this.nzTreeService.formatEvent('dblclick', this.nzTreeNode, event);\n    this.nzDblClick.emit(eventNext);\n  }\n\n  contextMenu(event: MouseEvent): void {\n    event.preventDefault();\n    const eventNext = this.nzTreeService.formatEvent('contextmenu', this.nzTreeNode, event);\n    this.nzContextMenu.emit(eventNext);\n  }\n\n  /**\n   * check node\n   * @param event\n   */\n  clickCheckBox(event: MouseEvent): void {\n    event.preventDefault();\n    // return if node is disabled\n    if (this.isDisabled || this.isDisableCheckbox) {\n      return;\n    }\n    this.nzTreeNode.isChecked = !this.nzTreeNode.isChecked;\n    this.nzTreeNode.isHalfChecked = false;\n    this.nzTreeService.setCheckedNodeList(this.nzTreeNode);\n    const eventNext = this.nzTreeService.formatEvent('check', this.nzTreeNode, event);\n    this.nzCheckBoxChange.emit(eventNext);\n  }\n\n  clearDragClass(): void {\n    const dragClass = ['drag-over-gap-top', 'drag-over-gap-bottom', 'drag-over', 'drop-target'];\n    dragClass.forEach(e => {\n      this.renderer.removeClass(this.elementRef.nativeElement, e);\n    });\n  }\n\n  /**\n   * drag event\n   * @param e\n   */\n  handleDragStart(e: DragEvent): void {\n    try {\n      // ie throw error\n      // firefox-need-it\n      e.dataTransfer!.setData('text/plain', this.nzTreeNode.key!);\n    } catch (error) {\n      // empty\n    }\n    this.nzTreeService.setSelectedNode(this.nzTreeNode);\n    const eventNext = this.nzTreeService.formatEvent('dragstart', this.nzTreeNode, e);\n    this.nzOnDragStart.emit(eventNext);\n  }\n\n  handleDragEnter(e: DragEvent): void {\n    e.preventDefault();\n    // reset position\n    this.showIndicator = this.nzTreeNode.key !== this.nzTreeService.getSelectedNode()?.key;\n    this.renderIndicator(2);\n    this.ngZone.run(() => {\n      const eventNext = this.nzTreeService.formatEvent('dragenter', this.nzTreeNode, e);\n      this.nzOnDragEnter.emit(eventNext);\n    });\n  }\n\n  handleDragOver(e: DragEvent): void {\n    e.preventDefault();\n    const dropPosition = this.nzTreeService.calcDropPosition(e);\n    if (this.dragPos !== dropPosition) {\n      this.clearDragClass();\n      this.renderIndicator(dropPosition);\n      // leaf node will pass\n      if (!(this.dragPos === 0 && this.isLeaf)) {\n        this.renderer.addClass(this.elementRef.nativeElement, this.dragPosClass[this.dragPos]);\n        this.renderer.addClass(this.elementRef.nativeElement, 'drop-target');\n      }\n    }\n    const eventNext = this.nzTreeService.formatEvent('dragover', this.nzTreeNode, e);\n    this.nzOnDragOver.emit(eventNext);\n  }\n\n  handleDragLeave(e: DragEvent): void {\n    e.preventDefault();\n    this.renderIndicator(2);\n    this.clearDragClass();\n    const eventNext = this.nzTreeService.formatEvent('dragleave', this.nzTreeNode, e);\n    this.nzOnDragLeave.emit(eventNext);\n  }\n\n  handleDragDrop(e: DragEvent): void {\n    this.ngZone.run(() => {\n      this.showIndicator = false;\n      this.clearDragClass();\n      const node = this.nzTreeService.getSelectedNode();\n      if (!node || (node && node.key === this.nzTreeNode.key) || (this.dragPos === 0 && this.isLeaf)) {\n        return;\n      }\n      // pass if node is leafNo\n      const dropEvent = this.nzTreeService.formatEvent('drop', this.nzTreeNode, e);\n      const dragEndEvent = this.nzTreeService.formatEvent('dragend', this.nzTreeNode, e);\n      if (this.nzBeforeDrop) {\n        this.nzBeforeDrop({\n          dragNode: this.nzTreeService.getSelectedNode()!,\n          node: this.nzTreeNode,\n          pos: this.dragPos\n        }).subscribe((canDrop: boolean) => {\n          if (canDrop) {\n            this.nzTreeService.dropAndApply(this.nzTreeNode, this.dragPos);\n          }\n          this.nzOnDrop.emit(dropEvent);\n          this.nzOnDragEnd.emit(dragEndEvent);\n        });\n      } else if (this.nzTreeNode) {\n        this.nzTreeService.dropAndApply(this.nzTreeNode, this.dragPos);\n        this.nzOnDrop.emit(dropEvent);\n      }\n    });\n  }\n\n  handleDragEnd(e: DragEvent): void {\n    e.preventDefault();\n    this.ngZone.run(() => {\n      // if user do not custom beforeDrop\n      if (!this.nzBeforeDrop) {\n        const eventNext = this.nzTreeService.formatEvent('dragend', this.nzTreeNode, e);\n        this.nzOnDragEnd.emit(eventNext);\n      }\n    });\n  }\n\n  /**\n   * Listening to dragging events.\n   */\n  handDragEvent(): void {\n    this.ngZone.runOutsideAngular(() => {\n      if (this.nzDraggable) {\n        const nativeElement = this.elementRef.nativeElement;\n        this.destroy$ = new Subject();\n        fromEvent<DragEvent>(nativeElement, 'dragstart')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((e: DragEvent) => this.handleDragStart(e));\n        fromEvent<DragEvent>(nativeElement, 'dragenter')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((e: DragEvent) => this.handleDragEnter(e));\n        fromEvent<DragEvent>(nativeElement, 'dragover')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((e: DragEvent) => this.handleDragOver(e));\n        fromEvent<DragEvent>(nativeElement, 'dragleave')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((e: DragEvent) => this.handleDragLeave(e));\n        fromEvent<DragEvent>(nativeElement, 'drop')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((e: DragEvent) => this.handleDragDrop(e));\n        fromEvent<DragEvent>(nativeElement, 'dragend')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((e: DragEvent) => this.handleDragEnd(e));\n      } else {\n        this.destroy$.next();\n        this.destroy$.complete();\n      }\n    });\n  }\n\n  markForCheck(): void {\n    this.cdr.markForCheck();\n  }\n\n  constructor(\n    public nzTreeService: NzTreeBaseService,\n    private ngZone: NgZone,\n    private renderer: Renderer2,\n    private elementRef: ElementRef,\n    private cdr: ChangeDetectorRef,\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\n  ) {}\n\n  ngOnInit(): void {\n    this.nzTreeNode.component = this;\n  }\n\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }): void {\n    const { nzDraggable } = changes;\n    if (nzDraggable) {\n      this.handDragEvent();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private renderIndicator(dropPosition: number): void {\n    this.ngZone.run(() => {\n      this.showIndicator = dropPosition !== 2;\n      if (this.nzTreeNode.key === this.nzTreeService.getSelectedNode()?.key || (dropPosition === 0 && this.isLeaf)) {\n        return;\n      }\n      this.dragPos = dropPosition;\n      this.cdr.markForCheck();\n    });\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable } from '@angular/core';\nimport { NzTreeBaseService } from 'ng-zorro-antd/core/tree';\n\n@Injectable()\nexport class NzTreeService extends NzTreeBaseService {\n  constructor() {\n    super();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  EventEmitter,\n  forwardRef,\n  Host,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChange,\n  SkipSelf,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { treeCollapseMotion } from 'ng-zorro-antd/core/animation';\nimport { NzConfigKey, NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\nimport {\n  flattenTreeData,\n  NzFormatBeforeDropEvent,\n  NzFormatEmitEvent,\n  NzTreeBase,\n  NzTreeBaseService,\n  NzTreeHigherOrderServiceToken,\n  NzTreeNode,\n  NzTreeNodeKey,\n  NzTreeNodeOptions\n} from 'ng-zorro-antd/core/tree';\nimport { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NzTreeService } from './tree.service';\n\nexport function NzTreeServiceFactory(higherOrderService: NzTreeBaseService, treeService: NzTreeService): NzTreeBaseService {\n  return higherOrderService ? higherOrderService : treeService;\n}\n\nconst NZ_CONFIG_MODULE_NAME: NzConfigKey = 'tree';\n\n@Component({\n  selector: 'nz-tree',\n  exportAs: 'nzTree',\n  animations: [treeCollapseMotion],\n  template: `\n    <div role=\"tree\">\n      <input [ngStyle]=\"HIDDEN_STYLE\" />\n    </div>\n    <div class=\"ant-tree-list\" [class.ant-select-tree-list]=\"nzSelectMode\">\n      <div>\n        <cdk-virtual-scroll-viewport\n          *ngIf=\"nzVirtualHeight\"\n          [class.ant-select-tree-list-holder-inner]=\"nzSelectMode\"\n          [class.ant-tree-list-holder-inner]=\"!nzSelectMode\"\n          [itemSize]=\"nzVirtualItemSize\"\n          [minBufferPx]=\"nzVirtualMinBufferPx\"\n          [maxBufferPx]=\"nzVirtualMaxBufferPx\"\n          [style.height]=\"nzVirtualHeight\"\n        >\n          <ng-container *cdkVirtualFor=\"let node of nzFlattenNodes; trackBy: trackByFlattenNode\">\n            <ng-template [ngTemplateOutlet]=\"nodeTemplate\" [ngTemplateOutletContext]=\"{ $implicit: node }\"></ng-template>\n          </ng-container>\n        </cdk-virtual-scroll-viewport>\n\n        <div\n          *ngIf=\"!nzVirtualHeight\"\n          [class.ant-select-tree-list-holder-inner]=\"nzSelectMode\"\n          [class.ant-tree-list-holder-inner]=\"!nzSelectMode\"\n          [@.disabled]=\"beforeInit || noAnimation?.nzNoAnimation\"\n          [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n          [@treeCollapseMotion]=\"nzFlattenNodes.length\"\n        >\n          <ng-container *ngFor=\"let node of nzFlattenNodes; trackBy: trackByFlattenNode\">\n            <ng-template [ngTemplateOutlet]=\"nodeTemplate\" [ngTemplateOutletContext]=\"{ $implicit: node }\"></ng-template>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n    <ng-template #nodeTemplate let-treeNode>\n      <nz-tree-node\n        builtin\n        [icon]=\"treeNode.icon\"\n        [title]=\"treeNode.title\"\n        [isLoading]=\"treeNode.isLoading\"\n        [isSelected]=\"treeNode.isSelected\"\n        [isDisabled]=\"treeNode.isDisabled\"\n        [isMatched]=\"treeNode.isMatched\"\n        [isExpanded]=\"treeNode.isExpanded\"\n        [isLeaf]=\"treeNode.isLeaf\"\n        [isStart]=\"treeNode.isStart\"\n        [isEnd]=\"treeNode.isEnd\"\n        [isChecked]=\"treeNode.isChecked\"\n        [isHalfChecked]=\"treeNode.isHalfChecked\"\n        [isDisableCheckbox]=\"treeNode.isDisableCheckbox\"\n        [isSelectable]=\"treeNode.isSelectable\"\n        [canHide]=\"treeNode.canHide\"\n        [nzTreeNode]=\"treeNode\"\n        [nzSelectMode]=\"nzSelectMode\"\n        [nzShowLine]=\"nzShowLine\"\n        [nzExpandedIcon]=\"nzExpandedIcon\"\n        [nzDraggable]=\"nzDraggable\"\n        [nzCheckable]=\"nzCheckable\"\n        [nzShowExpand]=\"nzShowExpand\"\n        [nzAsyncData]=\"nzAsyncData\"\n        [nzSearchValue]=\"nzSearchValue\"\n        [nzHideUnMatched]=\"nzHideUnMatched\"\n        [nzBeforeDrop]=\"nzBeforeDrop\"\n        [nzShowIcon]=\"nzShowIcon\"\n        [nzTreeTemplate]=\"nzTreeTemplate || nzTreeTemplateChild\"\n        (nzExpandChange)=\"eventTriggerChanged($event)\"\n        (nzClick)=\"eventTriggerChanged($event)\"\n        (nzDblClick)=\"eventTriggerChanged($event)\"\n        (nzContextMenu)=\"eventTriggerChanged($event)\"\n        (nzCheckBoxChange)=\"eventTriggerChanged($event)\"\n        (nzOnDragStart)=\"eventTriggerChanged($event)\"\n        (nzOnDragEnter)=\"eventTriggerChanged($event)\"\n        (nzOnDragOver)=\"eventTriggerChanged($event)\"\n        (nzOnDragLeave)=\"eventTriggerChanged($event)\"\n        (nzOnDragEnd)=\"eventTriggerChanged($event)\"\n        (nzOnDrop)=\"eventTriggerChanged($event)\"\n      ></nz-tree-node>\n    </ng-template>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NzTreeService,\n    {\n      provide: NzTreeBaseService,\n      useFactory: NzTreeServiceFactory,\n      deps: [[new SkipSelf(), new Optional(), NzTreeHigherOrderServiceToken], NzTreeService]\n    },\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzTreeComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.ant-select-tree]': `nzSelectMode`,\n    '[class.ant-select-tree-show-line]': `nzSelectMode && nzShowLine`,\n    '[class.ant-select-tree-icon-hide]': `nzSelectMode && !nzShowIcon`,\n    '[class.ant-select-tree-block-node]': `nzSelectMode && nzBlockNode`,\n    '[class.ant-tree]': `!nzSelectMode`,\n    '[class.ant-tree-rtl]': `dir === 'rtl'`,\n    '[class.ant-tree-show-line]': `!nzSelectMode && nzShowLine`,\n    '[class.ant-tree-icon-hide]': `!nzSelectMode && !nzShowIcon`,\n    '[class.ant-tree-block-node]': `!nzSelectMode && nzBlockNode`,\n    '[class.draggable-tree]': `nzDraggable`\n  }\n})\nexport class NzTreeComponent extends NzTreeBase implements OnInit, OnDestroy, ControlValueAccessor, OnChanges, AfterViewInit {\n  readonly _nzModuleName: NzConfigKey = NZ_CONFIG_MODULE_NAME;\n\n  static ngAcceptInputType_nzShowIcon: BooleanInput;\n  static ngAcceptInputType_nzHideUnMatched: BooleanInput;\n  static ngAcceptInputType_nzBlockNode: BooleanInput;\n  static ngAcceptInputType_nzExpandAll: BooleanInput;\n  static ngAcceptInputType_nzSelectMode: BooleanInput;\n  static ngAcceptInputType_nzCheckStrictly: BooleanInput;\n  static ngAcceptInputType_nzShowExpand: BooleanInput;\n  static ngAcceptInputType_nzShowLine: BooleanInput;\n  static ngAcceptInputType_nzCheckable: BooleanInput;\n  static ngAcceptInputType_nzAsyncData: BooleanInput;\n  static ngAcceptInputType_nzDraggable: BooleanInput;\n  static ngAcceptInputType_nzMultiple: BooleanInput;\n\n  @Input() @InputBoolean() @WithConfig() nzShowIcon: boolean = false;\n  @Input() @InputBoolean() @WithConfig() nzHideUnMatched: boolean = false;\n  @Input() @InputBoolean() @WithConfig() nzBlockNode: boolean = false;\n  @Input() @InputBoolean() nzExpandAll = false;\n  @Input() @InputBoolean() nzSelectMode = false;\n  @Input() @InputBoolean() nzCheckStrictly = false;\n  @Input() @InputBoolean() nzShowExpand: boolean = true;\n  @Input() @InputBoolean() nzShowLine = false;\n  @Input() @InputBoolean() nzCheckable = false;\n  @Input() @InputBoolean() nzAsyncData = false;\n  @Input() @InputBoolean() nzDraggable: boolean = false;\n  @Input() @InputBoolean() nzMultiple = false;\n  @Input() nzExpandedIcon?: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }>;\n  @Input() nzVirtualItemSize = 28;\n  @Input() nzVirtualMaxBufferPx = 500;\n  @Input() nzVirtualMinBufferPx = 28;\n  @Input() nzVirtualHeight: string | null = null;\n  @Input() nzTreeTemplate?: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }>;\n  @Input() nzBeforeDrop?: (confirm: NzFormatBeforeDropEvent) => Observable<boolean>;\n  @Input() nzData: NzTreeNodeOptions[] | NzTreeNode[] = [];\n  @Input() nzExpandedKeys: NzTreeNodeKey[] = [];\n  @Input() nzSelectedKeys: NzTreeNodeKey[] = [];\n  @Input() nzCheckedKeys: NzTreeNodeKey[] = [];\n  @Input() nzSearchValue: string = '';\n  @Input() nzSearchFunc?: (node: NzTreeNodeOptions) => boolean;\n  @ContentChild('nzTreeTemplate', { static: true }) nzTreeTemplateChild!: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }>;\n  @ViewChild(CdkVirtualScrollViewport, { read: CdkVirtualScrollViewport }) cdkVirtualScrollViewport!: CdkVirtualScrollViewport;\n  nzFlattenNodes: NzTreeNode[] = [];\n  beforeInit = true;\n  dir: Direction = 'ltr';\n\n  @Output() readonly nzExpandedKeysChange: EventEmitter<string[]> = new EventEmitter<string[]>();\n  @Output() readonly nzSelectedKeysChange: EventEmitter<string[]> = new EventEmitter<string[]>();\n  @Output() readonly nzCheckedKeysChange: EventEmitter<string[]> = new EventEmitter<string[]>();\n  @Output() readonly nzSearchValueChange = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzClick = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzDblClick = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzContextMenu = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzCheckBoxChange = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzExpandChange = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragStart = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragEnter = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragOver = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragLeave = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDrop = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragEnd = new EventEmitter<NzFormatEmitEvent>();\n\n  HIDDEN_STYLE = {\n    width: 0,\n    height: 0,\n    display: 'flex',\n    overflow: 'hidden',\n    opacity: 0,\n    border: 0,\n    padding: 0,\n    margin: 0\n  };\n\n  destroy$ = new Subject();\n\n  onChange: (value: NzTreeNode[]) => void = () => null;\n  onTouched: () => void = () => null;\n\n  writeValue(value: NzTreeNode[]): void {\n    this.handleNzData(value);\n  }\n\n  registerOnChange(fn: (_: NzTreeNode[]) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * Render all properties of nzTree\n   * @param changes: all changes from @Input\n   */\n  renderTreeProperties(changes: { [propertyName: string]: SimpleChange }): void {\n    let useDefaultExpandedKeys = false;\n    let expandAll = false;\n    const { nzData, nzExpandedKeys, nzSelectedKeys, nzCheckedKeys, nzCheckStrictly, nzExpandAll, nzMultiple, nzSearchValue } = changes;\n\n    if (nzExpandAll) {\n      useDefaultExpandedKeys = true;\n      expandAll = this.nzExpandAll;\n    }\n\n    if (nzMultiple) {\n      this.nzTreeService.isMultiple = this.nzMultiple;\n    }\n\n    if (nzCheckStrictly) {\n      this.nzTreeService.isCheckStrictly = this.nzCheckStrictly;\n    }\n\n    if (nzData) {\n      this.handleNzData(this.nzData);\n    }\n\n    if (nzCheckedKeys) {\n      this.handleCheckedKeys(this.nzCheckedKeys);\n    }\n\n    if (nzCheckStrictly) {\n      this.handleCheckedKeys(null);\n    }\n\n    if (nzExpandedKeys || nzExpandAll) {\n      useDefaultExpandedKeys = true;\n      this.handleExpandedKeys(expandAll || this.nzExpandedKeys);\n    }\n\n    if (nzSelectedKeys) {\n      this.handleSelectedKeys(this.nzSelectedKeys, this.nzMultiple);\n    }\n\n    if (nzSearchValue) {\n      if (!(nzSearchValue.firstChange && !this.nzSearchValue)) {\n        useDefaultExpandedKeys = false;\n        this.handleSearchValue(nzSearchValue.currentValue, this.nzSearchFunc);\n        this.nzSearchValueChange.emit(this.nzTreeService.formatEvent('search', null, null));\n      }\n    }\n\n    // flatten data\n    const currentExpandedKeys = this.getExpandedNodeList().map(v => v.key);\n    const newExpandedKeys = useDefaultExpandedKeys ? expandAll || this.nzExpandedKeys : currentExpandedKeys;\n    this.handleFlattenNodes(this.nzTreeService.rootNodes, newExpandedKeys);\n  }\n\n  trackByFlattenNode(_: number, node: NzTreeNode): string {\n    return node.key;\n  }\n  // Deal with properties\n  /**\n   * nzData\n   * @param value\n   */\n  handleNzData(value: NzSafeAny[]): void {\n    if (Array.isArray(value)) {\n      const data = this.coerceTreeNodes(value);\n      this.nzTreeService.initTree(data);\n    }\n  }\n\n  handleFlattenNodes(data: NzTreeNode[], expandKeys: NzTreeNodeKey[] | true = []): void {\n    this.nzTreeService.flattenTreeData(data, expandKeys);\n  }\n\n  handleCheckedKeys(keys: NzTreeNodeKey[] | null): void {\n    this.nzTreeService.conductCheck(keys, this.nzCheckStrictly);\n  }\n\n  handleExpandedKeys(keys: NzTreeNodeKey[] | true = []): void {\n    this.nzTreeService.conductExpandedKeys(keys);\n  }\n\n  handleSelectedKeys(keys: NzTreeNodeKey[], isMulti: boolean): void {\n    this.nzTreeService.conductSelectedKeys(keys, isMulti);\n  }\n\n  handleSearchValue(value: string, searchFunc?: (node: NzTreeNodeOptions) => boolean): void {\n    const dataList = flattenTreeData(this.nzTreeService.rootNodes, true).map(v => v.data);\n    const checkIfMatched = (node: NzTreeNode): boolean => {\n      if (searchFunc) {\n        return searchFunc(node.origin);\n      }\n      return !value || !node.title.toLowerCase().includes(value.toLowerCase()) ? false : true;\n    };\n    dataList.forEach(v => {\n      v.isMatched = checkIfMatched(v);\n      v.canHide = !v.isMatched;\n      if (!v.isMatched) {\n        v.setExpanded(false);\n        this.nzTreeService.setExpandedNodeList(v);\n      } else {\n        // expand\n        this.nzTreeService.expandNodeAllParentBySearch(v);\n      }\n      this.nzTreeService.setMatchedNodeList(v);\n    });\n  }\n\n  /**\n   * Handle emit event\n   * @param event\n   * handle each event\n   */\n  eventTriggerChanged(event: NzFormatEmitEvent): void {\n    const node = event.node!;\n    switch (event.eventName) {\n      case 'expand':\n        this.renderTree();\n        this.nzExpandChange.emit(event);\n        break;\n      case 'click':\n        this.nzClick.emit(event);\n        break;\n      case 'dblclick':\n        this.nzDblClick.emit(event);\n        break;\n      case 'contextmenu':\n        this.nzContextMenu.emit(event);\n        break;\n      case 'check':\n        // Render checked state with nodes' property `isChecked`\n        this.nzTreeService.setCheckedNodeList(node);\n        if (!this.nzCheckStrictly) {\n          this.nzTreeService.conduct(node);\n        }\n        // Cause check method will rerender list, so we need recover it and next the new event to user\n        const eventNext = this.nzTreeService.formatEvent('check', node, event.event!);\n        this.nzCheckBoxChange.emit(eventNext);\n        break;\n      case 'dragstart':\n        // if node is expanded\n        if (node.isExpanded) {\n          node.setExpanded(!node.isExpanded);\n          this.renderTree();\n        }\n        this.nzOnDragStart.emit(event);\n        break;\n      case 'dragenter':\n        const selectedNode = this.nzTreeService.getSelectedNode();\n        if (selectedNode && selectedNode.key !== node.key && !node.isExpanded && !node.isLeaf) {\n          node.setExpanded(true);\n          this.renderTree();\n        }\n        this.nzOnDragEnter.emit(event);\n        break;\n      case 'dragover':\n        this.nzOnDragOver.emit(event);\n        break;\n      case 'dragleave':\n        this.nzOnDragLeave.emit(event);\n        break;\n      case 'dragend':\n        this.nzOnDragEnd.emit(event);\n        break;\n      case 'drop':\n        this.renderTree();\n        this.nzOnDrop.emit(event);\n        break;\n    }\n  }\n\n  /**\n   * Click expand icon\n   */\n  renderTree(): void {\n    this.handleFlattenNodes(\n      this.nzTreeService.rootNodes,\n      this.getExpandedNodeList().map(v => v.key)\n    );\n    this.cdr.markForCheck();\n  }\n  // Handle emit event end\n\n  constructor(\n    nzTreeService: NzTreeBaseService,\n    public nzConfigService: NzConfigService,\n    private cdr: ChangeDetectorRef,\n    @Optional() private directionality: Directionality,\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\n  ) {\n    super(nzTreeService);\n  }\n\n  ngOnInit(): void {\n    this.nzTreeService.flattenNodes$.pipe(takeUntil(this.destroy$)).subscribe(data => {\n      this.nzFlattenNodes = data;\n      this.cdr.markForCheck();\n    });\n\n    this.dir = this.directionality.value;\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n  }\n\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }): void {\n    this.renderTreeProperties(changes);\n  }\n\n  ngAfterViewInit(): void {\n    this.beforeInit = false;\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzHighlightModule } from 'ng-zorro-antd/core/highlight';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzTreeDropIndicatorComponent } from './tree-drop-indicator.component';\nimport { NzTreeIndentComponent } from './tree-indent.component';\nimport { NzTreeNodeBuiltinCheckboxComponent } from './tree-node-checkbox.component';\nimport { NzTreeNodeSwitcherComponent } from './tree-node-switcher.component';\nimport { NzTreeNodeTitleComponent } from './tree-node-title.component';\nimport { NzTreeNodeBuiltinComponent } from './tree-node.component';\nimport { NzTreeComponent } from './tree.component';\n\n@NgModule({\n  imports: [BidiModule, CommonModule, NzOutletModule, NzIconModule, NzNoAnimationModule, NzHighlightModule, ScrollingModule],\n  declarations: [\n    NzTreeComponent,\n    NzTreeNodeBuiltinComponent,\n    NzTreeIndentComponent,\n    NzTreeNodeSwitcherComponent,\n    NzTreeNodeBuiltinCheckboxComponent,\n    NzTreeNodeTitleComponent,\n    NzTreeDropIndicatorComponent\n  ],\n  exports: [NzTreeComponent, NzTreeNodeBuiltinComponent, NzTreeIndentComponent]\n})\nexport class NzTreeModule {}\n"],"mappings":"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"}